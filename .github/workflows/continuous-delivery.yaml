name: Continuous Delivery

on:
  push:
    branches:
      - master

jobs:
  release:
    if: contains(github.event.commits[0].message, 'chore(release)') == false
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Fetch all history.
          fetch-depth: 0
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
      - name: Cache dependencies
        uses: actions/cache@v2.1.6
        with:
          key: npm-${{ hashFiles('./package-lock.json') }}
          path: ~/.npm
          restore-keys: |
            npm-
      - name: Install dependencies
        run: npm ci --ignore-scripts --no-audit --no-progress --prefer-offline
      - env:
          GITHUB_TOKEN: ${{ secrets.DOTTBOTT_TOKEN }}
        id: release
        name: Release
        uses: ridedott/release-me-action@v3.5.50
        with:
          node-module: true
          release-rules: |
            [
              { "release": "patch", "type": "build" },
              { "release": "patch", "type": "chore" },
              { "release": "patch", "type": "ci" },
              { "release": "patch", "type": "docs" },
              { "release": "patch", "type": "improvement" },
              { "release": "patch", "type": "refactor" },
              { "release": false, "scope": "deps-dev", "type": "chore" },
              { "release": false, "subject": "*\\[skip release\\]*" }
            ]
      - if: steps.release.outputs.released == 'true'
        name: Setup Node.js
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          registry-url: 'https://npm.pkg.github.com'
      - env:
          NODE_AUTH_TOKEN: ${{ secrets.DOTTBOTT_TOKEN }}
        if: steps.release.outputs.released == 'true'
        name: Publish to GitHub Packages
        run: npm publish
      - if: steps.release.outputs.released == 'true'
        name: Setup Node.js
        uses: actions/setup-node@v2.4.0
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
          scope: '@ridedott'
      - env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: steps.release.outputs.released == 'true'
        name: Publish to npm
        run: npm publish
    timeout-minutes: 10
